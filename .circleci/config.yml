version: 2

references:
  workspace: &workspace
               ~/app

  android_config: &android_config
    working_directory: *workspace

    docker:
      - image: pubnative/android:30_20200916

    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

    ## Cache
  gradle_key: &gradle_key
                jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  gems_key: &gems_key
              gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle

  ## Dependencies
  ruby_yum: &ruby_yum
    run:
      name: Install Ruby Dev Libs
      command: yum install -y ruby-devel

  bundler_update: &bundler_update
    run:
      name: Update bundler
      command: gem install bundler --version 1.16.3

  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path vendor/bundle

jobs:

  deploy_firebase:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_yum
      - *bundler_update
      - *ruby_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - run:
          name: Deploy to Firebase App Distribution
          command: bundle exec fastlane deploy_to_firebase

workflows:
  version: 2
  build_test_deploy:
    jobs:

      - deploy_firebase:
          filters:
            branches:
              only:
                - master

